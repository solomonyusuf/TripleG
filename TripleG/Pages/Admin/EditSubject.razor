@page "/edit/subject/{studentId}/{resultId}/{subjectId}"
@inject NavigationManager route
@using System.Text
@using TripleG.Server.Models
@inject SubjectController http
@inject ResultController res
@inject StudentController sub
@inject StudentHubController sh
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin,Teacher")]
@layout AdminLayout


<div>
    <div class="card">
        <div class="card-body" style="margin:40px;">
            <EditForm Model="subject" OnValidSubmit="PostSubject">
                <h2 class="text-center" style="color: var(--bs-blue);">Edit Subjects</h2>
                <div class="mb-3"><InputText @bind-Value="subject.Name" class="form-control" type="text" name="Name" placeholder="Enter Subject Name" /></div>
                <div class="mb-3"><InputText @bind-Value="subject.FirstTest" class="form-control" type="text" name="FirstTest" placeholder="First Test" /></div>
                <div class="mb-3"><InputText @bind-Value="subject.SecondTest" class="form-control" type="text" name="SecondTest" placeholder="Second Test" /></div>
                <div class="mb-3"><InputText @bind-Value="subject.ExamScore" class="form-control" type="text" name="ExamScore" placeholder="ExamScore" /></div>
                <div class="mb-3"><InputText @bind-Value="subject.Total" class="form-control" type="text" name="Percentage" placeholder="Total" /></div>
                @*  <div class="mb-3"><InputText @bind-Value="subject.Grade" class="form-control" type="text" name="Grade" placeholder="Grade" /></div>*@
                <div class="mb-3"></div>
                <div class="mb-3"></div>
                <div class="mb-3"><button class="btn btn-primary text-center align-self-center w-100" type="submit" style="text-align: center;margin: 15px;">Submit</button></div>
            </EditForm>


        </div>
    </div>
</div>



@code {
    [Parameter]
    public string studentId { get; set; }
    [Parameter]
    public string resultId { get; set; }
    [Parameter]
    public string subjectId { get; set; }
    public bool load { get; set; }
    public Subject subject = new();
    public StudentHub studentHub = new();
    //

    protected override async Task OnInitializedAsync()
    {
        await Sub();
    }

    private async Task Sub()
    {
        var a = await this.http.GetSubject(Guid.Parse(subjectId));
        this.subject = a.Value;
    }




    private async Task PostSubject()
    {
        try
        {
            this.load = true;
            var res = await this.http.PutSubject(Guid.Parse(subjectId), subject);
            await Sub();
            var student = await this.sub.GetStudent(Guid.Parse(studentId));
            var Result = await this.res.GetResult(Guid.Parse(resultId));
            await SaveSubject(this.subject);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }


    private async Task SaveSubject(Subject res)
    {
        try
        {
            var req = new StudentHub { StudentId = Guid.Parse(studentId), ResultId = Guid.Parse(resultId), SubjectId = res.SubjectId, Name = res.Name, FirstTest = res.FirstTest, SecondTest = res.SecondTest, ExamScore = res.ExamScore, Total = res.Total, Grade = res.Grade };
            var rep = await this.sh.PutStudentHub(Guid.Parse(subjectId), req);
            this.route.NavigateTo($"/result/detail/{this.studentId}/{this.resultId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);

        }
    }



}














